name: Merge JSON Files

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight, adjust as needed

jobs:
  merge-json:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Required Python Packages
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas

    - name: Download and Merge JSON Files
      run: |
        import requests
        import pandas as pd

        # URLs to download JSON files
        urls = [
            "https://sql.telemetry.mozilla.org/api/queries/101785/results.json?api_key=5ynVkkPtGWDrzRkaj02GkFifGILHtqoqkngK6Nkw",
            "https://sql.telemetry.mozilla.org/api/queries/101807/results.json?api_key=mq9Z2VNBaphOVvt94YtUJVBGxxA6NpPrnG7dtHrq",
            "https://sql.telemetry.mozilla.org/api/queries/101771/results.json?api_key=a852JNzIiOv9Wu53e9m4FYDplIfYnNOc0cFJfDa3"
        ]

        # List to hold all data
        all_data = []

        # Download each JSON file and extract 'query_result.data.rows'
        for url in urls:
            response = requests.get(url)
            data = response.json()
            rows = data.get("query_result", {}).get("data", {}).get("rows", [])
            all_data.extend(rows)

        # Load existing JSON file from the repository
        try:
            with open('js-metrics-data.json', 'r') as file:
                existing_data = pd.read_json(file, lines=True)
                all_data.extend(existing_data.to_dict(orient='records'))
        except FileNotFoundError:
            print("js-metrics-data.json not found, starting with downloaded data.")
            existing_data = pd.DataFrame()

        # Convert to DataFrame
        df = pd.DataFrame(all_data)

        # Drop duplicates, keeping the latest based on 'date', 'channel', 'os', 'metric'
        df = df.drop_duplicates(subset=['date', 'channel', 'os', 'metric'], keep='last')

        # Sort the DataFrame by the date column
        df['date'] = pd.to_datetime(df['date']).dt.strftime('%Y-%m-%d')
        df = df.sort_values(by='date')

        # Save the merged DataFrame back to the JSON file
        df.to_json('js-metrics-data.json', orient='records', lines=True)

    - name: Commit and Push Changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git add js-metrics-data.json
        git commit -m "Update js-metrics-data.json with latest data"
        git push
